<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="SPRING" />
		<property name="password" value="SPRING" />
	</bean>
	
		<!-- Mybatis 연동 설정 -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- dataSource : 마이바티스 빈 객체에 사용할 DB 설정 객체 참조 (사용할 DB 객체등록) -->
		<property name="dataSource" ref="dataSource" />
		<!-- mapperLocations : mybatis-config에 작성하였던 mapper 파일들을 한번에 불러오기 위한 설정 -->
		<property name="mapperLocations"
			value="classpath*:mappers/*.xml" />
		<!-- SQL mapper 파일들을 모두 한번에 읽어와 관리한다. -->

		<!-- configLocation : mybatis-config 설정을 읽어 오기 위한 속성 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>

	<!-- Mybatis 사용과 관련된 sqlSessionTemplate 등록하기 -->
	<!-- 마이바티스로 Template 만들기 -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean" />
	</bean>

	<!-- 트랜잭션 처리와 관련된 매니저 객체 설정 (스프링이 하도록 권한 인계하기) -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 트랜잭션 처리 방식 -->
	<!-- 선언적 AOP처리방식(XML 방식) -->
	<!-- 트랜 잭션 처리를 위한 advice 구간 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<!-- 트랜 잭션 처리할 메소드 등록하기 -->	
		<tx:attributes>
			<tx:method name="select*" rollback-for="Exception" read-only="true"/>
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete"  rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	

	<!-- 프로그램적 AOP 처리 방식 (어노테이션 방식) -->
	
	<!-- <aop:aspectj-autoproxy/> -->
	
	
</beans>
